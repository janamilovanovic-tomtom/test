# Copyright (C) 2022 TomTom NV. All rights reserved.

---

name: Deploy Documentation to GitHub Pages and SharePoint
# GitHub Pages will be available at: https://fluffy-train-v716q7o.pages.github.io/
# Drive link: https://tomtominternational.sharepoint.com/sites/nav-dx-guidance/Shared%20Documents/nie-ux-spec/

on:
  workflow_call:
    inputs:
      src_dir:
        description: root of path of Markdown files to recursively build HTML from
        required: true
        type: string
      build_dir:
        description: root of path to recursively publish static HTML from
        required: true
        type: string

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy-to-github-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      build_dir: ${{ inputs.build_dir }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install markdown

      - name: Generate HTML from Markdown
        run: python3 .github/workflow_scripts/generate_html.py "${{ inputs.src_dir }}" "${{ inputs.build_dir }}"

      - name: Fix ownership of HTML files
        run: sudo chown -hR "$(id -un):$(id -gn)"  "${{ inputs.build_dir }}"

      - name: Copy assets
        run: rsync -akv --exclude='.*' --exclude='**/*.md' --exclude=${{ inputs.build_dir }} "${{ inputs.src_dir }}"/ "${{ inputs.build_dir }}"/

      - name: Set output
        id: set_output
        run: echo "build_dir=${{ inputs.build_dir }}" >> $GITHUB_ENV  # Postavite build_dir kao izlaz

     # - name: Setup GitHub Pages
      #  uses: actions/configure-pages@v5

      #- name: Upload GitHub Pages artifact
       # uses: actions/upload-pages-artifact@v3
        #with:
         # path: "${{ inputs.build_dir }}"

    #  - name: Deploy to GitHub Pages
     #   id: deployment
      #  uses: actions/deploy-pages@v4

  deploy-to-sharepoint:
    name: Deploy to SharePoint
    runs-on: ubuntu-latest
    needs: deploy-to-github-pages

    steps:
      - name: Create ZIP archive
        run: zip -r nie-ux-spec.zip "${{ needs.deploy-to-github-pages.outputs.build_dir }}"/

      - name: Create upload session
        id: create_upload_session
        env:
          ACCESS_TOKEN: ${{ secrets.SP_ACCESS_TOKEN }}
          DRIVE_ID: ${{ secrets.DRIVE_ID }}
          FILE_NAME: 'nie-ux-spec.zip'
          FOLDER_NAME: 'nie-ux-spec'
        run: |
          upload_session=$(curl -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
                  "item": {
                    "@microsoft.graph.conflictBehavior": "replace",
                    "name": "'"$FILE_NAME"'"
                  }
                }' \
            "https://graph.microsoft.com/v1.0/drives/$DRIVE_ID/root:/$FOLDER_NAME/$FILE_NAME:/createUploadSession")
          
          echo "UPLOAD_URL=$(echo $upload_session | jq -r .uploadUrl)" >> $GITHUB_ENV

      - name: Upload file in chunks
        env:
          ACCESS_TOKEN: ${{ secrets.SP_ACCESS_TOKEN }}
          UPLOAD_URL: ${{ env.UPLOAD_URL }}
        run: |
          chunk_size=20971520  # 20 MB
          total_size=$(stat -c%s "nie-ux-spec.zip")
          offset=0
          
          while [ $offset -lt $total_size ]; do
              end=$((offset + chunk_size - 1))
              if [ $end -ge $total_size ]; then
                  end=$((total_size - 1))
              fi
          
              content_range="bytes $offset-$end/$total_size"
          
              dd if=nie-ux-spec.zip bs=1 skip=$offset count=$((end - offset + 1)) status=none | curl -X PUT \
                -H "Authorization: Bearer $ACCESS_TOKEN" \
                -H "Content-Range: $content_range" \
                --data-binary @- \
                "$UPLOAD_URL"
          
              offset=$((offset + chunk_size))
          done
