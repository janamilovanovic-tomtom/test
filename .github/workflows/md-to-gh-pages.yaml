# Copyright (C) 2022 TomTom NV. All rights reserved.

---

name: Deploy Markdown to GitHub Pages
# Publishes to: http://username.github.io/repository.
# Docs: https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site#publishing-with-a-custom-github-actions-workflow
# To enable gh-pages: https://pages.github.com/
#   goto:
#    - repo settings
#    - Pages
#    - Build and deployment -> Source: select GitHub Actions

on:
  workflow_call:
    inputs:
      src_dir:
        description: root of path of Markdown files to recursively build HTML from
        required: true
        type: string
      build_dir:
        description: root of path to recursively publish static HTML from
        required: true
        type: string

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    name: Deploy Markdown to GitHub Pages
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install markdown

      - name: Generate HTML from Markdown
        run: python3 .github/workflow_scripts/generate_html.py "${{ inputs.src_dir }}" "${{ inputs.build_dir }}"

      - name: Fix ownership of HTML files
        run: sudo chown -hR "$(id -un):$(id -gn)"  "${{ inputs.build_dir }}"

      - name: Copy assets
        run: rsync -akv --exclude='.*' --exclude='**/*.md' "${{ inputs.src_dir }}"/ "${{ inputs.build_dir }}"/

   #   - name: Setup GitHub Pages
    #    uses: actions/configure-pages@v5

   #   - name: Upload GitHub Pages artifact
    #    uses: actions/upload-pages-artifact@v3
     #   with:
      #    path: "${{ inputs.build_dir }}"

    #  - name: Deploy to GitHub Pages
     #   id: deployment
      #  uses: actions/deploy-pages@v4
        
      - name: Create ZIP Archive
        run: zip -r ux_spec1.zip "${{ inputs.build_dir }}/Region specific designs"
        
      - name: Upload ZIP to Confluence
        env:
          CONFLUENCE_USER: ${{ secrets.CONFLUENCE_USER }}
          CONFLUENCE_TOKEN: ${{ secrets.CONFLUENCE_TOKEN }}
          PAGE_ID: '409764067'
          CONFLUENCE_URL: 'https://tomtom.atlassian.net/wiki/rest/api/content'
        run: |
          curl -u "${CONFLUENCE_USER}:${CONFLUENCE_TOKEN}" \
               -F "file=@ux_spec1.zip" \
               -H "X-Atlassian-Token: no-check" \
               "${CONFLUENCE_URL}/${PAGE_ID}/child/attachment"
