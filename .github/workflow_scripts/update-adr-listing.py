#!/usr/bin/env python3

# Copyright (C) 2019 TomTom NV. All rights reserved.
#
# This software is the proprietary copyright of TomTom NV and its subsidiaries and may be
# used for internal evaluation purposes or commercial use strictly subject to separate
# license agreement between you and TomTom NV. If you are the licensee, you are only permitted
# to use this software in accordance with the terms of your license agreement. If you are
# not the licensee, you are not authorized to use this software in any manner and should
# immediately return or destroy it.

import os
import re
import argparse

# src: https://stackoverflow.com/questions/41129921/validate-an-iso-8601-datetime-string-in-python
regex_iso8601 = r'(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):?[0-5][0-9])?)?'
search_iso8601 = re.compile(regex_iso8601).search


def adr_file_name_to_link_alt(file_name_without_suffix: str):
    found = search_iso8601(file_name_without_suffix)
    if found:
        adr_time_stamp = found.string[found.start():found.end()]
        adr_title = found.string[found.end():].replace('-', ' ').strip()
        adr_link_alt = "{} {}".format(adr_time_stamp, adr_title)
        return adr_link_alt
    return file_name_without_suffix


def build_xref(file_name, adr_subdir, adr_suffix):
    link = os.path.join(adr_subdir, file_name)
    link_alt = adr_file_name_to_link_alt(file_name[:-len(adr_suffix)])
    return f'\nxref:{link}[{link_alt}]\n'


def generation_warning():
    return f'// !!!! Generated by: {os.path.relpath(__file__)}\n'


def main():
    parser = argparse.ArgumentParser(
        description="Creates/updates index file with all ADR entries."
    )
    parser.add_argument("--adr_dir", help="Path to directory with ADRs", type=str, required=True)
    args = parser.parse_args()

    root_dir = args.adr_dir
    adr_subdir = 'src/adr'
    adr_dir = os.path.join(root_dir, adr_subdir)
    adr_suffix = '.adoc'

    files = [f for f in os.listdir(
        adr_dir) if os.path.isfile(os.path.join(adr_dir, f))]
    adoc_files = [f for f in files if f.endswith(adr_suffix)]
    adr_files = [build_xref(f, adr_subdir, adr_suffix) for f in adoc_files]
    adr_files.sort()

    with open(os.path.join(root_dir, 'adr.adoc'), 'w', encoding='utf-8') as adr_index:
        adr_index.write(
            '// Copyright (C) 2023 TomTom NV. All rights reserved.\n')
        adr_index.write(generation_warning())
        adr_index.writelines(adr_files)
        adr_index.write(generation_warning())


if __name__ == "__main__":
    main()
